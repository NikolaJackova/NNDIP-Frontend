<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:NNDIP.Maui.Converters" 
             xmlns:api="clr-namespace:NNDIP.ApiClient;assembly=NNDIP.ApiClient"
             xmlns:sensor="clr-namespace:NNDIP.Maui.Models.Sensor"
             xmlns:viewModels="clr-namespace:NNDIP.Maui.ViewModels.Dashboard"
             xmlns:lang="clr-namespace:NNDIP.Maui.Resources.Languages"
             xmlns:chart="clr-namespace:Syncfusion.Maui.Charts;assembly=Syncfusion.Maui.Charts"
             x:Class="NNDIP.Maui.Views.Dashboard.DashboardPage"
             Title="{x:Static lang:AppResources.dashboardPage_PageTitle}"
             x:Name="dashboardPage">
    <Shell.TitleView>
        <Grid ColumnDefinitions="*,*" VerticalOptions="Center">
            <Label Style="{StaticResource labelTitleStyle}" Text="{x:Static lang:AppResources.dashboardPage_PageTitle}" />
            <Image Grid.Column="1" Source="dashboard.png" HeightRequest="40" WidthRequest="40"/>
        </Grid>
    </Shell.TitleView>
    <RefreshView Command="{Binding RefreshCommand}" IsRefreshing="{Binding IsRefreshing}">
        <ScrollView VerticalScrollBarVisibility="Always" VerticalOptions="FillAndExpand">
            <VerticalStackLayout MaximumWidthRequest="{OnPlatform iOS=-1}">

                <!-- DEVICE STATUS -->
                <VerticalStackLayout Padding="8" Spacing="5">
                    <Label Style="{StaticResource labelTitleStyle}" Text="{x:Static lang:AppResources.dashboardPage_DeviceStatus}"/>
                    <Frame Padding="8">
                        <Grid ColumnDefinitions="*, 3*, 2*">
                            <Image HeightRequest="30" WidthRequest="30">
                                <Image.Source>
                                    <Binding Path="AddressStateResult.IsACUnitOn">
                                        <Binding.Converter>
                                            <converters:BoolToObjectConverter x:TypeArguments="x:String"
                                                             TrueObject="yes.png"
                                                             FalseObject="no.png" />
                                        </Binding.Converter>
                                    </Binding>
                                </Image.Source>
                            </Image>
                            <Label Grid.Column="1" Text="{x:Static lang:AppResources.dashboardPage_AirCondition}"/>
                            <Image Grid.Column="2" HeightRequest="40" WidthRequest="40" >
                                <Image.IsVisible>
                                    <Binding Path="AddressStateResult.IsACUnitOn"/>
                                </Image.IsVisible>
                                <Image.Source>
                                    <Binding Path="AddressStateResult.AcUnitMode">
                                        <Binding.Converter>
                                            <converters:ACUnitModeToObjectConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Image.Source>
                            </Image>
                        </Grid>
                    </Frame>
                    <Frame Padding="8">
                        <Grid ColumnDefinitions="*, 3*, 2*">
                            <Image HeightRequest="30" WidthRequest="30">
                                <Image.Source>
                                    <Binding Path="AddressStateResult.IsFanOn">
                                        <Binding.Converter>
                                            <converters:BoolToObjectConverter x:TypeArguments="x:String"
                                                             TrueObject="yes.png"
                                                             FalseObject="no.png" />
                                        </Binding.Converter>
                                    </Binding>
                                </Image.Source>
                            </Image>
                            <Label Grid.Column="1" Text="{x:Static lang:AppResources.dashboardPage_Ventilator}"/>
                            <Image Grid.Column="2" HeightRequest="40" WidthRequest="40">
                                <Image.IsVisible>
                                    <Binding Path="AddressStateResult.IsFanOn"/>
                                </Image.IsVisible>
                                <Image.Source>
                                    <Binding Path="AddressStateResult.AcUnitFanSpeed">
                                        <Binding.Converter>
                                            <converters:FanSpeedToIconConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Image.Source>
                            </Image>
                        </Grid>
                    </Frame>
                    <Frame Padding="8">
                        <Grid ColumnDefinitions="*, 3*, 2*">
                            <Image HeightRequest="30" WidthRequest="30">
                                <Image.Source>
                                    <Binding Path="AddressStateResult.IsRecuperationOn">
                                        <Binding.Converter>
                                            <converters:BoolToObjectConverter x:TypeArguments="x:String"
                                                             TrueObject="yes.png"
                                                             FalseObject="no.png" />
                                        </Binding.Converter>
                                    </Binding>
                                </Image.Source>
                            </Image>
                            <Label Grid.Column="1" Text="{x:Static lang:AppResources.dashboardPage_Recuperation}"/>
                        </Grid>
                    </Frame>
                </VerticalStackLayout>

                <!-- SENSOR STATUS -->
                <VerticalStackLayout Padding="8" Spacing="5">
                    <Label Style="{StaticResource labelTitleStyle}" Text="{x:Static lang:AppResources.dashboardPage_SensorStatus}"/>
                    <CollectionView IsGrouped="True" ItemsSource="{Binding SensorGroups}" HeightRequest="{OnPlatform iOS=280}" MaximumWidthRequest="{OnPlatform iOS=-1}">
                        <CollectionView.GroupHeaderTemplate>
                            <DataTemplate x:DataType="sensor:SensorGroup">
                                <HorizontalStackLayout Padding="0,8" Spacing="10">
                                    <Label Style="{StaticResource labelTitleStyle}" Text="{Binding Sensor.Name}"/>
                                    <Label FontSize="Default" Text="{Binding Sensor.DataTimestamp.LocalDateTime}"/>
                                    <Image IsVisible="{OnPlatform iOS=False}" HeightRequest="20" WidthRequest="20" Source="{Binding GroupIcon}" />
                                    <HorizontalStackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Source={x:RelativeSource AncestorType={x:Type viewModels:DashboardPageViewModel}},Path=AddOrRemoveGroupDataCommand}" CommandParameter="{Binding .}" />
                                    </HorizontalStackLayout.GestureRecognizers>
                                </HorizontalStackLayout>
                            </DataTemplate>
                        </CollectionView.GroupHeaderTemplate>
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="api:SimpleDataDto">
                                <Frame Padding="8" Margin="0,0,0,5">
                                    <Grid ColumnDefinitions="*, 3*, 2*">
                                        <Image HeightRequest="40" WidthRequest="40">
                                            <Image.Source>
                                                <Binding Path="TypeName">
                                                    <Binding.Converter>
                                                        <converters:SensorDataTypeToObjectConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Image.Source>
                                        </Image>
                                        <Label Grid.Column="2">
                                            <Label.Text>
                                                <MultiBinding StringFormat="{}{0} {1}">
                                                    <Binding Path="Value" />
                                                    <Binding Path="UnitMeas" />
                                                </MultiBinding>
                                            </Label.Text>
                                        </Label>
                                    </Grid>
                                </Frame>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </VerticalStackLayout>

                <!-- CHART -->
                <VerticalStackLayout Padding="8">
                    <Frame Padding="8">
                        <Grid RowDefinitions="*,*" ColumnDefinitions="*,2*,*,2*" RowSpacing="10">
                            <Label Text="{x:Static lang:AppResources.dashboardPage_Unit}" />
                            <Picker Grid.Column="1" Title="{x:Static lang:AppResources.dashboardPage_SelectUnit}" ItemsSource="{Binding Units}" ItemDisplayBinding="{Binding TypeName}" SelectedItem="{Binding SelectedUnit}">
                                <Picker.Behaviors>
                                    <toolkit:EventToCommandBehavior
                                        EventName="SelectedIndexChanged"
                                        Command="{Binding Source={x:Reference dashboardPage},Path=BindingContext.UnitSelectedIndexChangedCommand}"/>
                                </Picker.Behaviors>
                            </Picker>
                            <Label Grid.Column="2" Text="{x:Static lang:AppResources.dashboardPage_Sensor}" />
                            <Picker Grid.Column="3" Title="{x:Static lang:AppResources.dashboardPage_SelectSensor}" ItemsSource="{Binding Sensors}" ItemDisplayBinding="{Binding Name}" SelectedItem="{Binding SelectedSensor}">
                                <Picker.Behaviors>
                                    <toolkit:EventToCommandBehavior
                                        EventName="SelectedIndexChanged"
                                        Command="{Binding Source={x:Reference dashboardPage},Path=BindingContext.SensorSelectedIndexChangedCommand}"/>
                                </Picker.Behaviors>
                            </Picker>
                            <Label Grid.Row="1" Text="{x:Static lang:AppResources.dashboardPage_Date}" />
                            <DatePicker Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Date="{Binding DatePickerDate}">
                                <DatePicker.Behaviors>
                                    <toolkit:EventToCommandBehavior
                                        EventName="DateSelected"
                                        Command="{Binding Source={x:Reference dashboardPage},Path=BindingContext.DateSelectedCommand}"/>
                                </DatePicker.Behaviors>
                            </DatePicker>
                            <HorizontalStackLayout Grid.Row="2" Grid.Column="3" Spacing="5">
                                <Button Text="−" BorderWidth="1" BorderColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource Tertiary}}" Command="{Binding MinusCommand}"/>
                                <Button Text="+" BorderWidth="1" BorderColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource Tertiary}}" Command="{Binding PlusCommand}"/>
                            </HorizontalStackLayout>
                        </Grid>
                    </Frame>

                    <ActivityIndicator IsVisible="{Binding IsChartLoading}" IsRunning="{Binding IsChartLoading}"/>
                    <chart:SfCartesianChart IsVisible="{Binding Path=IsChartLoading, Converter={converters:InverseBoolConverter}}" Margin="{OnPlatform iOS='-6,8,0,0'}">
                        <chart:SfCartesianChart.Resources>
                            <chart:ChartAxisLabelStyle x:Key="xAxisLabelStyle" TextColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource Tertiary}}" LabelFormat="HH:mm"/>
                            <chart:ChartAxisLabelStyle x:Key="yAxisLabelStyle" TextColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource Tertiary}}"/>
                        </chart:SfCartesianChart.Resources>

                        <chart:SfCartesianChart.XAxes>
                            <chart:DateTimeAxis LabelStyle="{StaticResource xAxisLabelStyle}" ShowMajorGridLines="False"/>
                        </chart:SfCartesianChart.XAxes>

                        <chart:SfCartesianChart.YAxes>
                            <chart:NumericalAxis LabelStyle="{StaticResource yAxisLabelStyle}">
                                <chart:NumericalAxis.Title>
                                    <chart:ChartAxisTitle Text="{Binding UnitMeasTitle}" TextColor="{AppThemeBinding Light={StaticResource Tertiary}, Dark={StaticResource Tertiary}}"/>
                                </chart:NumericalAxis.Title>
                            </chart:NumericalAxis>
                        </chart:SfCartesianChart.YAxes>

                        <chart:SfCartesianChart.Series>
                            <chart:LineSeries
                                ItemsSource="{Binding Data}"
                                XBindingPath="DataTimestamp.DateTime"
                                YBindingPath="{Binding TypeName}"
                                EnableTooltip="True"
                                Fill="{AppThemeBinding Light={StaticResource Yellow100Accent}, Dark={StaticResource Yellow100Accent}}"/>
                        </chart:SfCartesianChart.Series>

                        <chart:SfCartesianChart.TooltipBehavior>
                            <chart:ChartTooltipBehavior/>
                        </chart:SfCartesianChart.TooltipBehavior>

                        <chart:SfCartesianChart.ZoomPanBehavior>
                            <chart:ChartZoomPanBehavior EnablePinchZooming="True"/>
                        </chart:SfCartesianChart.ZoomPanBehavior>
                    </chart:SfCartesianChart>
                </VerticalStackLayout>
            </VerticalStackLayout>
        </ScrollView>
    </RefreshView>
</ContentPage>