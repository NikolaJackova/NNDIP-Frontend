# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'macos-12'

variables:
  - group: maui-ios-pipeline

      
steps:

# https://docs.microsoft.com/en-us/azure/devops/pipelines/apps/mobile/app-signing?view=azure-devops&tabs=apple-install-during-build#sign-your-apple-ios-macos-tvos-or-watchos-app
# Setup Secret Pipeline Variable or Library Secrets Variable for iOS Certificate Password
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: '$(provisioningProfile)'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: '$(p12FileName)'
    certPwd: '$(p12Password)'
    keychain: 'temp'
- task: UseDotNet@2
  displayName: .NET Version
  inputs:
    packageType: 'sdk'
    version: '7.x'

- task: Bash@3
  displayName: Install MAUI
  inputs:
    targetType: 'inline'
    script: |
      dotnet nuget locals all --clear
      dotnet workload install maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json
      dotnet workload install android ios maccatalyst tvos macos maui wasm-tools --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

- task: Bash@3
  displayName: Restore nuget
  inputs:
    targetType: 'inline'
    script: |
      cd NNDIP.Maui/
      dotnet restore NNDIP.Maui.csproj
# https://docs.microsoft.com/en-us/dotnet/maui/ios/deployment/overview
- task: Bash@3
  displayName: Build iOS App
  inputs:
    targetType: 'inline'
    script: |
      cd NNDIP.Maui/
      # dotnet publish NNDIP.Maui.csproj -f net7.0-ios -c Release -r ios-arm64
      dotnet publish NNDIP.Maui.csproj -f net7.0-ios16.0 -c Release -r ios-arm64 /p:ApplicationId=com.upce.nndip.maui /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false
- task: CopyFiles@2
  inputs:
    Contents: |
      **/*.app
      **/*.ipa
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop_ios'
    publishLocation: 'Container'
- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'AppCenter'
    appSlug: 'st58237-upce.cz/NNDIP'
    appFile: '$(Build.ArtifactStagingDirectory)/**/*.ipa'
    releaseNotesOption: 'input'
    destinationType: 'groups'